@{
   ViewBag.Title = "Index";
}

<h2>Gestion des taches</h2>

<hr />

@if (ViewBag.nbNonAffecte != 0)
{
   <div style="background-color: #000000; font-size: 16px; color:#FFFFFF; width:100%; padding-left:10px">
      Non affecte
   </div>
}

@foreach (var data in ViewBag.listeNonAffecte)
{


   <div class="row">

      <hr />

      <div style="background-color: #CCCCCC; font-size: 16px; color: #000000; width: 100%; padding-left:10px">@data.nom</div>
      <div>@data.date_saisie.ToString("dd/MM/yyyy") importance @importance(data.importance)</div>

      <br />
      <div>@data.description</div>
      <br />
      @if (data.fichiers != null && data.fichiers.Trim() != "")
      {
         <label>Fichiers</label>
         foreach (string fichier in getFichiers(@data.fichiers))
         {

            <div><a href="~/Fichiers/@fichier" target="_blank">@fichier</a></div>
         }
      }
      <br />
      @if ((User.Identity.IsAuthenticated) && (int.Parse(((FormsIdentity)User.Identity).Ticket.UserData) < 3))
      {
         <div><a href="~/Home/sapproprierrTache/@data.id" class="btn btn-warning">S'approprier</a></div>
      }
   </div>

   <hr />
}

@foreach (var data in ViewBag.listeUtilisateurs)
{
   if (data.Taches.Count == 0) { continue; }
   Boolean estVide = true;
   foreach (var tache in data.Taches)
   {
      if (!tache.Termine) { estVide = false;break; }
   }
   if (estVide) { continue; }
   <div style="background-color: #000000; font-size: 16px; color:#FFFFFF; width:100%; padding-left:10px">
      @data.nom
   </div>

  foreach (var tache in data.Taches)
   {
      <hr />
      <div>
         @if (tache.Termine) {continue;   }
         <div class="row">
            <div style="background-color: #CCCCCC; font-size: 16px; color: #000000; width: 100%; padding-left:10px">@tache.nom</div>
            <div>@tache.date_saisie.ToString("dd/MM/yyyy") importance @importance(@tache.importance)</div>

            <br />
            <label>Description</label>
            <div>@tache.description</div>
            <br />
            @if (tache.fichiers != null && tache.fichiers.Trim() != "")
            {
               <label>Fichiers</label>
               foreach (string fichier in getFichiers(@tache.fichiers))
               {

                  <div><a href="~/Fichiers/@fichier" target="_blank">@fichier</a></div>
               }
            }
            <hr />
            <label>Marquer comme terminer</label>
            <div><a href="~/Home/TerminerTache/@tache.id" class="btn btn-warning">Termine</a></div>

         </div>
      </div>

   }
   <br />
}
@functions
{
   public List<string> getFichiers(string fichiers)
   {
      List<string> result = fichiers.Split(';').ToList();
      return result;
   }

   public string importance(int i)
   {
      switch(i)
      {
         case 1: return "Normale";
         case 2: return "Prioritaire";
         default : return "Urgente";
      }
   }



}
